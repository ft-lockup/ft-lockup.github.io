{"version":3,"sources":["config.ts","services/api.ts","services/near.ts","pages/About/index.tsx","utils.ts","components/table/row.tsx","services/CreateLockupService.ts","components/Header/CreateLockup.tsx","pages/Lockups/index.tsx","pages/UserLockups/index.tsx","components/Header/index.tsx","components/App/index.tsx","NearApp.tsx","index.tsx"],"names":["CONTRACT_NAME","process","config","env","REACT_APP_ENVIRONMENT","networkId","nodeUrl","contractName","walletUrl","helperUrl","explorerUrl","Error","getConfig","NearApi","near","contract","walletConnection","tokenContract","this","WalletConnection","Contract","account","viewMethods","changeMethods","tokenContractId","console","log","get_token_account_id","get_lockups_paged","then","response","map","id","data","Object","assign","successUrl","window","location","href","requestSignIn","undefined","signOut","getAccountId","acc_id","a","balance","getAccountBalance","b","amount","total","parseFloat","utils","format","formatNearAmount","error","NearContext","createContext","connectNear","keyStore","nearAPI","BrowserLocalStorageKeyStore","headers","api","signedAccountId","getTokenAccountId","setTokenContract","provider","connection","signedIn","About","lockups","token_account_id","className","length","Big","DP","convertTimestamp","time","Date","toLocaleDateString","convertAmount","value","Math","floor","Row","props","row","useState","open","setOpen","TableRow","sx","borderBottom","TableCell","IconButton","size","onClick","align","to","account_id","schedule","timestamp","total_balance","style","width","claimed_balance","unclaimed_balance","background","padding","colSpan","Collapse","in","timeout","unmountOnExit","Box","Table","TableHead","TableBody","x","component","scope","getFirstFullAccessKey","accountId","query","request_type","finality","allAccessKeys","keys","allFullAccessKeys","filter","key","access_key","permission","CreateLockupService","lockupContractId","userAccountId","senderAccountId","lockupTotalAmount","claimedBalance","firstFullAccessKey","localStorage","setItem","JSON","stringify","allKeys","public_key","msg","meta","receiver_id","ft_transfer_call","CreateLockup","useContext","handleCreateLockup","getTokenContract","getContract","contractId","createLockup","call","type","Lockups","uniqueUsers","Array","from","Set","TableContainer","boxShadow","Paper","lockup","UserLockups","allLockups","userId","useParams","Header","App","contractState","setContractState","token","setToken","useEffect","active","load","loadAllLockups","name","path","element","NearApp","setNear","nearConn","connect","useMemo","signIn","Provider","render","document","getElementById"],"mappings":"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","file":"static/js/main.65140251.chunk.js","sourcesContent":["export interface INearConfig {\n  networkId: string,\n  nodeUrl: string,\n  contractName: string,\n  walletUrl: string,\n  helperUrl: string,\n  explorerUrl: string,\n}\n\nconst CONTRACT_NAME = process.env.REACT_APP_CONTRACT_NAME || 'ft-lockup.demo000.ft-lockup.testnet';\n\n// TODO: move these data to envs\nfunction getConfig(): INearConfig {\n  const env = process.env.REACT_APP_ENVIRONMENT || 'development';\n  switch (env) {\n    case 'production':\n    case 'mainnet':\n      return {\n        networkId: 'mainnet',\n        nodeUrl: 'https://rpc.mainnet.near.org',\n        contractName: CONTRACT_NAME,\n        walletUrl: 'https://wallet.near.org',\n        helperUrl: 'https://helper.mainnet.near.org',\n        explorerUrl: 'https://explorer.mainnet.near.org',\n      };\n    case 'development':\n    case 'testnet':\n      return {\n        networkId: 'testnet',\n        nodeUrl: 'https://rpc.testnet.near.org',\n        contractName: CONTRACT_NAME,\n        walletUrl: 'https://wallet.testnet.near.org',\n        helperUrl: 'https://helper.testnet.near.org',\n        explorerUrl: 'https://explorer.testnet.near.org',\n      };\n    case 'betanet':\n      return {\n        networkId: 'betanet',\n        nodeUrl: 'https://rpc.betanet.near.org',\n        contractName: CONTRACT_NAME,\n        walletUrl: 'https://wallet.betanet.near.org',\n        helperUrl: 'https://helper.betanet.near.org',\n        explorerUrl: 'https://explorer.betanet.near.org',\n      };\n    case 'local':\n      return {\n        explorerUrl: '',\n        helperUrl: '',\n        networkId: 'local',\n        nodeUrl: 'http://localhost:3030',\n        walletUrl: 'http://localhost:4000/wallet',\n        contractName: CONTRACT_NAME,\n      };\n    case 'test':\n    case 'ci':\n      return {\n        explorerUrl: '',\n        helperUrl: '',\n        walletUrl: '',\n        networkId: 'shared-test',\n        nodeUrl: 'https://rpc.ci-testnet.near.org',\n        contractName: CONTRACT_NAME,\n      };\n    case 'ci-betanet':\n      return {\n        explorerUrl: '',\n        helperUrl: '',\n        walletUrl: '',\n        networkId: 'shared-test-staging',\n        nodeUrl: 'https://rpc.ci-betanet.near.org',\n        contractName: CONTRACT_NAME,\n      };\n    default:\n      throw Error(`Unconfigured environment '${env}'. Can be configured in src/config.js.`);\n  }\n}\n\nexport const config = getConfig();\n","import {\n  Near, Account, Contract, WalletConnection, utils,\n} from 'near-api-js';\nimport { config } from '../config';\n\nexport const fromNear = (amount: string): number => parseFloat(utils.format.formatNearAmount(amount || '0'));\nexport const toYoctoNear = (amount: number): string => utils.format.parseNearAmount(String(amount)) || '0';\n\ntype TViewMethods = {\n  'get_lockups_paged': any,\n  'get_token_account_id': any,\n};\n\ntype TNearAmount = string;\ntype TNearTimestamp = number;\n\nexport type TCheckpoint = {\n  timestamp: TNearTimestamp,\n  balance: TNearAmount,\n};\n\nexport type TLockup = {\n  id: number,\n  account_id: string,\n  claimed_balance: TNearAmount,\n  schedule: TCheckpoint[],\n  timestamp: TNearTimestamp,\n  total_balance: TNearAmount,\n  unclaimed_balance: TNearAmount,\n};\n\ntype TTokenChangeMethods = {\n  'ft_transfer_call': any,\n};\n\nexport type TTokenContract = Contract & TTokenChangeMethods;\n\nexport type TLockupContract = Contract & TViewMethods;\n\nclass NearApi {\n  private near: Near;\n\n  private contract: Contract;\n\n  private walletConnection: WalletConnection;\n\n  private tokenContract: Contract | null;\n\n  constructor(near: Near) {\n    this.near = near;\n    this.walletConnection = new WalletConnection(near, config.contractName);\n    this.contract = new Contract(this.walletConnection.account(), config.contractName, {\n      viewMethods: ['get_lockups_paged', 'get_token_account_id'],\n      changeMethods: [],\n    }) as TLockupContract;\n    this.tokenContract = null;\n  }\n\n  setTokenContract(tokenContractId: string) {\n    console.log('account to token = ', this.walletConnection.account());\n    this.tokenContract = new Contract(this.walletConnection.account(), tokenContractId, {\n      viewMethods: [],\n      changeMethods: ['ft_transfer_call'],\n    }) as TTokenContract;\n  }\n\n  getTokenContract(): TTokenContract {\n    return this.tokenContract as TTokenContract;\n  }\n\n  getContract(): Contract {\n    return this.contract as Contract;\n  }\n\n  getTokenAccountId(): Promise<string> {\n    return (this.contract as TLockupContract).get_token_account_id();\n  }\n\n  loadAllLockups(): Promise<TLockup[]> {\n    return (this.contract as TLockupContract).get_lockups_paged().then(\n      (response: any) => response.map(([id, data]: [number, any]) => Object.assign(data, { id })),\n    );\n  }\n\n  signIn(): void {\n    const successUrl = window.location.href;\n    this.walletConnection.requestSignIn(config.contractName, undefined, successUrl);\n  }\n\n  signOut(): void {\n    this.walletConnection.signOut();\n  }\n\n  get_account_id(): string {\n    return this.walletConnection.getAccountId();\n  }\n\n  async account(acc_id: string): Promise<Account> {\n    return this.near.account(acc_id);\n  }\n\n  async get_balance(acc_id: string): Promise<number | null> {\n    const account = await this.account(acc_id);\n    let balance = null;\n    try {\n      const b = await account.getAccountBalance();\n      balance = fromNear(b.total);\n    } catch (e) {\n      console.error('Account not exist');\n    }\n    return balance;\n  }\n}\n\nexport default NearApi;\n","import * as nearAPI from 'near-api-js';\nimport { createContext } from 'react';\nimport { config, INearConfig } from '../config';\nimport NearApi from './api';\n\nexport interface INearProps {\n  config: INearConfig;\n  api: NearApi;\n  signedIn: boolean;\n  signedAccountId: string | null;\n  provider: any;\n}\n\nexport const NearContext = createContext<any>(null);\n\nexport const connectNear = async (): Promise<INearProps> => {\n  const keyStore = new nearAPI.keyStores.BrowserLocalStorageKeyStore();\n  const near = await nearAPI.connect({ headers: {}, keyStore, ...config });\n  const walletConnection = new nearAPI.WalletConnection(near, config.contractName);\n  const api = new NearApi(near);\n  const signedAccountId = walletConnection.getAccountId();\n  const tokenContractId = await api.getTokenAccountId();\n  api.setTokenContract(tokenContractId);\n  const { provider } = near.connection;\n\n  return {\n    config,\n    api,\n    signedIn: !!signedAccountId,\n    signedAccountId,\n    provider,\n  };\n};\n","import { config } from '../../config';\n\nexport default function About(\n  { lockups, token_account_id }: { lockups: any[], token_account_id: string | null },\n) {\n  return (\n    <div className=\"container\">\n      <h1>About Page</h1>\n\n      <pre>\n        {`\n          This page should render all useful info about contract,\n          at least ft-lockup name, token name, contract ft balance,\n\n          ft-lockup account id: ${config.contractName}\n          token account id: ${token_account_id}\n\n          Total number of lockups: ${lockups.length}\n        `}\n      </pre>\n\n    </div>\n  );\n}\n","import Big from 'big.js';\n\nBig.DP = 40;\nexport const NEAR_ROUND_DIGITS = 2;\n\nexport const toNear = (value: any) => Big(value).times(10 ** 24).round(0, Big.roundDown);\nexport const nearTo = (value: any, digits = NEAR_ROUND_DIGITS, mode?: number | undefined) => {\n  // default is 20, need at least 38 for proper rounding of any near balance\n  Big.DP = 40;\n  return Big(value || '0').div(10 ** 24).toFixed(digits === 0 ? undefined : digits, mode);\n};\nexport const nearToCeil = (\n  value: any,\n  digits = NEAR_ROUND_DIGITS,\n) => nearTo(value, digits, Big.roundUp);\nexport const nearToFloor = (\n  value: any,\n  digits = NEAR_ROUND_DIGITS,\n) => nearTo(value, digits, Big.roundDown);\nexport const big = (value = '0') => Big(value);\nexport const tsNear2JS = (time: number) => Math.floor(time / 1000000);\nexport const convertTimestamp = (time: number) => new Date(time * 1000).toLocaleDateString('en-US');\nexport const convertAmount = (value: number) => Math.floor(value / 100000);\n","import { useState } from 'react';\nimport {\n  Box,\n  Collapse,\n  IconButton,\n  Table,\n  TableCell,\n  TableHead,\n  TableBody,\n  TableRow,\n} from '@mui/material';\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport { Link } from 'react-router-dom';\nimport { convertAmount, convertTimestamp } from '../../utils';\n\nexport default function Row(props: { row: ReturnType<any> }) {\n  const { row } = props;\n  const [open, setOpen] = useState(false);\n\n  // @ts-ignore\n  return (\n    <>\n      <TableRow className={open ? 'expanded exp-row' : 'exp-row'} sx={{ '& > *': { borderBottom: 'unset' } }}>\n        <TableCell>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => setOpen(!open)}\n          >\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell align=\"left\">{row.id}</TableCell>\n        <TableCell align=\"left\"><Link to={`/lockups/${row.account_id}`}>{row.account_id}</Link></TableCell>\n        <TableCell align=\"right\">\n          {convertTimestamp(row.schedule[0].timestamp)}\n        </TableCell>\n        <TableCell align=\"right\">\n          {convertTimestamp(row.schedule[row.schedule.length - 1].timestamp)}\n        </TableCell>\n        <TableCell align=\"right\">\n          {convertAmount(row.total_balance)}\n          &nbsp;TOKEN\n        </TableCell>\n        <TableCell align=\"center\">\n          <div className=\"progress-bar\">\n            <div style={{ width: `${(row.claimed_balance / row.total_balance) * 100}%` }} className=\"claimed\">\n              <span>{convertAmount(row.claimed_balance)}</span>\n            </div>\n            <div style={{ width: `${(row.unclaimed_balance / row.total_balance) * 100}%` }} className=\"available\">\n              <span>\n                {(row.unclaimed_balance / row.total_balance) > 0.2\n                  && convertAmount(row.unclaimed_balance)}\n              </span>\n            </div>\n            <div style={{ width: `${((row.total_balance - row.claimed_balance - row.unclaimed_balance) / row.total_balance) * 100}%` }} className=\"vested\">\n              <span>\n                {((row.total_balance - row.claimed_balance - row.unclaimed_balance)\n                  / row.total_balance) > 0.2 && convertAmount(row.total_balance\n                  - row.claimed_balance - row.unclaimed_balance)}\n              </span>\n            </div>\n            <div style={{ width: `${(row.total_balance - row.total_balance) * 100}%` }} className=\"unvested\">&nbsp;</div>\n          </div>\n        </TableCell>\n      </TableRow>\n      <TableRow sx={{ background: '#F4FAFF' }}>\n        <TableCell style={{ padding: 0 }} colSpan={7}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box sx={{ padding: 2 }}>\n              <div className=\"inner-table_wrapper\">\n                <h5>Lockup schedule</h5>\n                <Table className=\"inner-table\" size=\"small\" aria-label=\"purchases\">\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>DATE</TableCell>\n                      <TableCell>AMOUNT</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {row.schedule.map((x: any) => (\n                      <TableRow key={x.timestamp}>\n                        <TableCell component=\"th\" scope=\"row\">\n                          {convertTimestamp(x.timestamp)}\n                        </TableCell>\n                        <TableCell>\n                          {convertAmount(x.balance)}\n                          &nbsp;TOKEN\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </div>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </>\n  );\n}\n","import {\n  TTokenContract, TCheckpoint,\n} from './api';\n\nconst MAX_GAS = 300_000_000_000_000;\nconst ONE_YOKTO = 1;\n\nconst getFirstFullAccessKey = async (provider: any, accountId: String): Promise<any> => {\n  const allAccessKeys = await provider.query({\n    request_type: 'view_access_key_list',\n    account_id: accountId,\n    finality: 'optimistic',\n  });\n\n  if (!allAccessKeys.keys?.length) {\n    return {};\n  }\n\n  const allFullAccessKeys = allAccessKeys.keys.filter((key: any) => (typeof key?.access_key?.permission === 'string') && key?.access_key?.permission === 'FullAccess');\n\n  if (!allFullAccessKeys?.length) {\n    return {};\n  }\n\n  return allFullAccessKeys[0];\n};\n\ntype TLockupMessage = {\n  account_id: string,\n  schedule: Array<TCheckpoint>,\n  claimed_balance: string,\n};\n\nclass CreateLockupService {\n  private lockupContractId: string;\n\n  private tokenContract: TTokenContract;\n\n  private schedule: Array<TCheckpoint>;\n\n  private lockupTotalAmount: string;\n\n  private userAccountId: string;\n\n  private senderAccountId: string;\n\n  private claimedBalance: string;\n\n  private provider: any;\n\n  constructor(\n    tokenContract: TTokenContract,\n    schedule: Array<TCheckpoint>,\n    lockupContractId: string,\n    userAccountId: string,\n    senderAccountId: string,\n    lockupTotalAmount: string,\n    claimedBalance: string,\n    provider: any,\n  ) {\n    this.tokenContract = tokenContract;\n    this.schedule = schedule;\n    this.lockupContractId = lockupContractId;\n    this.userAccountId = userAccountId;\n    this.senderAccountId = senderAccountId;\n    this.lockupTotalAmount = lockupTotalAmount;\n    this.claimedBalance = claimedBalance;\n    this.provider = provider;\n  }\n\n  async call() {\n    const firstFullAccessKey = await getFirstFullAccessKey(this.provider, this.senderAccountId);\n    localStorage.setItem(\n      `${this.lockupContractId}_wallet_auth_key`,\n      JSON.stringify({ accountId: this.senderAccountId, allKeys: [firstFullAccessKey.public_key] }),\n    );\n\n    const msg: TLockupMessage = {\n      account_id: this.userAccountId,\n      schedule: this.schedule,\n      claimed_balance: this.claimedBalance,\n    };\n\n    const meta = {\n      receiver_id: this.lockupContractId,\n      amount: this.lockupTotalAmount,\n      msg: JSON.stringify(msg),\n    };\n\n    await this.tokenContract.ft_transfer_call(meta, MAX_GAS, ONE_YOKTO);\n  }\n}\n\nexport default CreateLockupService;\n","import { useContext } from 'react';\nimport { INearProps, NearContext } from '../../services/near';\nimport CreateLockupService from '../../services/CreateLockupService';\n\nfunction CreateLockup() {\n  const {\n    near,\n  }: {\n    near: INearProps | null,\n  } = useContext(NearContext);\n\n  const handleCreateLockup = async () => {\n    const tokenContract = near?.api?.getTokenContract();\n\n    if (!tokenContract) {\n      throw new Error('token contract is not initialized!');\n    }\n\n    const lockupContractId = near?.api.getContract().contractId || '';\n    const lockupTotalAmount = '9000000';\n    const schedule = [\n      { timestamp: 1400000000, balance: '0000000' },\n      { timestamp: 1500000000, balance: '3000000' },\n      { timestamp: 1600000000, balance: '6000000' },\n      { timestamp: 1700000000, balance: lockupTotalAmount },\n    ];\n    const userAccountId = 'bob.backail_caller.testnet';\n    const claimedBalance = '0';\n    const senderAccountId = 'owner.backail_caller.testnet';\n    const provider = near?.provider;\n\n    const createLockup = new CreateLockupService(\n      tokenContract,\n      schedule,\n      lockupContractId,\n      userAccountId,\n      senderAccountId,\n      lockupTotalAmount,\n      claimedBalance,\n      provider,\n    );\n    console.log('createLockup = ', createLockup);\n\n    createLockup.call();\n  };\n\n  return (\n    <button className=\"button\" type=\"button\" onClick={handleCreateLockup}>Create Lockup</button>\n  );\n}\n\nexport default CreateLockup;\n","import {\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from '@mui/material';\nimport Row from '../../components/table/row';\nimport CreateLockup from '../../components/Header/CreateLockup';\n\nexport default function Lockups({ lockups }: { lockups: any[] }) {\n  const uniqueUsers = Array.from(new Set(lockups.map((x) => x.account_id)));\n\n  console.log('unique users', uniqueUsers);\n\n  return (\n    <div className=\"container\">\n\n      <TableContainer sx={{ boxShadow: 'unset' }} component={Paper}>\n        <Table className=\"main-table\" aria-label=\"collapsible table\">\n          <TableHead className=\"table-head\">\n            <TableRow>\n              <TableCell />\n              <TableCell align=\"left\">ID</TableCell>\n              <TableCell align=\"left\">Account ID</TableCell>\n              <TableCell align=\"right\">Start&nbsp;date</TableCell>\n              <TableCell align=\"right\">End&nbsp;date</TableCell>\n              <TableCell align=\"right\">Total&nbsp;amount</TableCell>\n              <TableCell align=\"center\">Progress</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {lockups.map((lockup) => (\n              <Row key={lockup.id} row={lockup} />\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      <CreateLockup />\n\n    </div>\n  );\n}\n","import { useParams } from 'react-router-dom';\nimport {\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from '@mui/material';\nimport Row from '../../components/table/row';\n\nexport default function UserLockups({ lockups: allLockups }: { lockups: any[] }) {\n  const { userId } = useParams();\n\n  const lockups = allLockups.filter((x) => x.account_id === userId);\n\n  console.log('user lockups', userId, lockups);\n\n  return (\n    <div className=\"container\">\n\n      <TableContainer sx={{ boxShadow: 'unset' }} component={Paper}>\n        <Table className=\"main-table\" aria-label=\"collapsible table\">\n          <TableHead className=\"table-head\">\n            <TableRow>\n              <TableCell />\n              <TableCell align=\"left\">ID</TableCell>\n              <TableCell align=\"left\">Account ID</TableCell>\n              <TableCell align=\"right\">Start&nbsp;date</TableCell>\n              <TableCell align=\"right\">End&nbsp;date</TableCell>\n              <TableCell align=\"right\">Total&nbsp;amount</TableCell>\n              <TableCell align=\"center\">Progress</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {lockups.map((lockup) => (\n              <Row key={lockup.id} row={lockup} />\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n    </div>\n  );\n}\n","import { Link } from 'react-router-dom';\n\nexport default function Header() {\n  return (\n    <div className=\"header\">\n      <div className=\"container\">\n        <div className=\"nav\">\n          <Link className=\"nav-link\" to=\"/lockups\">Lockups</Link>\n          <Link className=\"nav-link\" to=\"/\">About</Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import {\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport { INearProps, NearContext } from '../../services/near';\nimport About from '../../pages/About';\nimport Lockups from '../../pages/Lockups';\nimport UserLockups from '../../pages/UserLockups';\nimport Header from '../Header';\n\nexport default function App() {\n  const { near }: { near: INearProps | null } = useContext(NearContext);\n  const [contractState, setContractState] = useState({});\n  const [token, setToken] = useState<string | null>(null);\n\n  useEffect(() => {\n    let active = true;\n\n    if (near) {\n      const load = async () => {\n        const lockups = await near.api.loadAllLockups();\n        if (!active) {\n          return;\n        }\n        setContractState({ lockups, name: 'name' });\n      };\n\n      load();\n    }\n\n    return () => { active = false; };\n  }, [near]);\n\n  useEffect(() => {\n    let active = true;\n\n    if (near) {\n      const load = async () => {\n        const response = await near.api.getTokenAccountId();\n        if (!active) {\n          return;\n        }\n        setToken(response);\n      };\n\n      load();\n    }\n\n    return () => { active = false; };\n  }, [near]);\n\n  if (Object.keys(contractState).length === 0) return null;\n\n  const { lockups }: any = contractState as any;\n\n  return (\n    <BrowserRouter>\n      <Header />\n      <Routes>\n        <Route path=\"/\" element={<About lockups={lockups} token_account_id={token} />} />\n        <Route path=\"/lockups\" element={<Lockups lockups={lockups} />} />\n        <Route path=\"/lockups/:userId\" element={<UserLockups lockups={lockups} />} />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n","import {\n  StrictMode, useEffect, useMemo, useState,\n} from 'react';\nimport App from './components/App';\nimport { NearContext, connectNear, INearProps } from './services/near';\n\nimport './index.css';\n\nexport default function NearApp() {\n  const [near, setNear] = useState<INearProps | null>(null);\n\n  useEffect(() => {\n    async function connect() {\n      const nearConn: INearProps = await connectNear();\n      setNear(nearConn);\n    }\n\n    connect();\n  }, []);\n\n  const value = useMemo(() => ({\n    near,\n    signIn: () => { near?.api?.signIn(); },\n    signOut: () => {\n      if (!near) return;\n\n      near.api.signOut();\n      setNear({\n        ...near,\n        signedIn: false,\n        signedAccountId: null,\n      });\n    },\n  }), [near]);\n\n  return (\n    <StrictMode>\n      <NearContext.Provider value={value}>\n        <App />\n      </NearContext.Provider>\n    </StrictMode>\n  );\n}\n","import { render } from 'react-dom';\n\nimport NearApp from './NearApp';\n\nrender(\n  <NearApp />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}